<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>gulp编译maven生成版本号解决静态资源缓存问题</title>
    <url>/2018/02/22/add-version-for-static-resource/</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>浏览器的缓存机制导致修改后的js或css文件重新部署发布后未生效</p>
<p>现在项目开发结构多为前后端分离，此种结构使用前端构建工具(gulp, webpack)编译发布时生成版本号并添加，方便快捷，容易实现。<br>对于前后端混合，未使用前端构建工具，开发人员以后端开发为主的项目，不宜使用前端构建工具，本文主要针对此类项目给出解决方案。</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>解决问题的关键点有两个：</p>
<ol>
<li>如何生成版本号</li>
<li>页面中如何获取到版本号<h4 id="如何生成版本号"><a href="#如何生成版本号" class="headerlink" title="如何生成版本号"></a>如何生成版本号</h4></li>
<li>使用统一的版本号，如发布日期、代码提交id、迭代版本等</li>
<li>计算每个静态资源文件的hash值，将hash值作为版本号</li>
</ol>
<h4 id="页面中如何获取到版本号"><a href="#页面中如何获取到版本号" class="headerlink" title="页面中如何获取到版本号"></a>页面中如何获取到版本号</h4><ol>
<li>如果使用统一的版本号可将版本号定义成变量。一处修改，全部使用</li>
<li>如果使用文件hash值，需要每次编译页面文件，写入hash值版本号</li>
</ol>
<h3 id="本文使用方法"><a href="#本文使用方法" class="headerlink" title="本文使用方法"></a>本文使用方法</h3><ol>
<li><p>本文中使用gulp一次性编译由于jsp文件，将页面中的静态资源链接修改为 ‘? + 参数’，如：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/common.js?v=$&#123;sourceVersion&#125;"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>npm安装包</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm install --save-dev gulp  </span><br><span class="line">npm install --save-dev gulp-rev  </span><br><span class="line">npm install --save-dev gulp-rev-collector  </span><br><span class="line">npm install --save-dev gulp-asset-rev  </span><br><span class="line">npm install --save-dev run-sequence</span><br></pre></td></tr></table></figure>
</li>
<li><p>gulpfile.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">	runSequence = <span class="built_in">require</span>(<span class="string">'run-sequence'</span>),</span><br><span class="line">	clean = <span class="built_in">require</span>(<span class="string">'gulp-clean'</span>),</span><br><span class="line">	rev = <span class="built_in">require</span>(<span class="string">'gulp-rev'</span>),</span><br><span class="line">	revCollector = <span class="built_in">require</span>(<span class="string">'gulp-rev-collector'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 待编译文件路径</span></span><br><span class="line"><span class="keyword">const</span> jsUrl = [<span class="string">'js/**/*.js'</span>,<span class="string">'!js/jquery*/**/*.js'</span>,<span class="string">'!js/echarts/**/*.js'</span>,<span class="string">'!js/selectWindow/**/*.js'</span>,<span class="string">'!js/lightbox2/**/*.js'</span>,<span class="string">'!js/sumoselect/**/*.js'</span>];</span><br><span class="line"><span class="keyword">const</span> cssUrl = [<span class="string">'css/**/*.css'</span>, <span class="string">'!css/zTreeStyle.css'</span>];</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'cleanRev'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> gulp.src(<span class="string">'dist/rev'</span>, &#123;<span class="attr">read</span>: <span class="literal">false</span>&#125;)</span><br><span class="line">				.pipe(clean());</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'cleanWebApp'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> gulp.src(<span class="string">'dist/webapp'</span>, &#123;<span class="attr">read</span>: <span class="literal">false</span>&#125;)</span><br><span class="line">				.pipe(clean());</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'revCss'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> gulp.src(cssUrl)</span><br><span class="line">				.pipe(rev())</span><br><span class="line">				.pipe(rev.manifest())</span><br><span class="line">				.pipe(gulp.dest(<span class="string">'dist/rev/css'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'revJs'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> gulp.src(jsUrl)</span><br><span class="line">				.pipe(rev())</span><br><span class="line">				.pipe(rev.manifest())</span><br><span class="line">				.pipe(gulp.dest(<span class="string">'dist/rev/json'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'rev'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> gulp.src([<span class="string">'dist/rev/**/*.json'</span>, <span class="string">'**/*.jsp'</span>])</span><br><span class="line">				.pipe(revCollector(&#123;</span><br><span class="line">					replaceReved: <span class="literal">false</span></span><br><span class="line">				&#125;))</span><br><span class="line">				.pipe(gulp.dest(<span class="string">'dist/webapp/'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'dev'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">done</span>) </span>&#123;</span><br><span class="line">	runSequence([<span class="string">'cleanRev'</span>], [<span class="string">'cleanWebApp'</span>], [<span class="string">'revCss'</span>], [<span class="string">'revJs'</span>], [<span class="string">'rev'</span>], done);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'dev'</span>]);</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改npm的包中的index.js源文件，因为默认的版本号不是“？+参数”形式</p>
</li>
<li><p>maven插件获取git commit id作为版本号</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;plugin&gt;</span><br><span class="line">	&lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;buildnumber-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">	&lt;version&gt;1.4&lt;/version&gt;</span><br><span class="line">	&lt;executions&gt;</span><br><span class="line">		&lt;execution&gt;</span><br><span class="line">			&lt;phase&gt;validate&lt;/phase&gt;</span><br><span class="line">			&lt;goals&gt;</span><br><span class="line">				&lt;goal&gt;create&lt;/goal&gt;</span><br><span class="line">			&lt;/goals&gt;</span><br><span class="line">		&lt;/execution&gt;</span><br><span class="line">	&lt;/executions&gt;</span><br><span class="line"> &lt;/plugin&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>properies文件获取变量值</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">sourceVersion=$&#123;buildNumber&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>gulp</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>1.ELK日志收集-Docker部署ELKF日志收集</title>
    <url>/2020/08/28/docker-install-elk/</url>
    <content><![CDATA[<p>E：elasticsearch；L：logstash；K：kibana；F：filebeat</p>
<p>单机架构部署：</p>
<h3 id="0-基础环境准备"><a href="#0-基础环境准备" class="headerlink" title="0 基础环境准备"></a>0 基础环境准备</h3><p>（1）linux系统，本文使用centos7</p>
<p>（2）docker服务，yum install docker</p>
<h3 id="1-创建桥接网络"><a href="#1-创建桥接网络" class="headerlink" title="1 创建桥接网络"></a>1 创建桥接网络</h3><p>L-E-K之间需要网络通信，为了实现容器间通信，因此使用docker桥接网络，ELK三个服务容器挂载到somenetwork网络上<br>创建网络somenetwork：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker network create somenetwork</span><br></pre></td></tr></table></figure></p>
<p>创建成功后，如下图所示</p>
<p>ip a 查看ip，如下图所示</p>
<h3 id="2-部署elasticsearch，版本为7-9-0"><a href="#2-部署elasticsearch，版本为7-9-0" class="headerlink" title="2 部署elasticsearch，版本为7.9.0"></a>2 部署elasticsearch，版本为7.9.0</h3><p>（1）拉取elasticsearch镜像<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull elasticsearch:7.9.0</span><br></pre></td></tr></table></figure></p>
<p>镜像仓库默认为dockerhub: ‘docker.io/elasticsearch’；也可以指定elastic镜像仓库</p>
<p>（2）启动elasticsearch容器<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d --name elasticsearch --net somenetwork -p 9200:9200 -p 9300:9300 -e &quot;discovery.type=single-node&quot; elasticsearch:7.9.0</span><br></pre></td></tr></table></figure></p>
<h3 id="3-部署kibana，版本为7-9-0"><a href="#3-部署kibana，版本为7-9-0" class="headerlink" title="3 部署kibana，版本为7.9.0"></a>3 部署kibana，版本为7.9.0</h3><p>（1）拉取kibana镜像<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull kibana:7.9.0</span><br></pre></td></tr></table></figure></p>
<p>（2）启动kibana容器<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d --name kibana --net somenetwork -p 5601:5601 kibana:7.9.0</span><br></pre></td></tr></table></figure></p>
<h3 id="4-部署logstash，版本为7-9-0"><a href="#4-部署logstash，版本为7-9-0" class="headerlink" title="4 部署logstash，版本为7.9.0"></a>4 部署logstash，版本为7.9.0</h3><p>（1）拉取logstash镜像<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull logstash:7.9.0</span><br></pre></td></tr></table></figure></p>
<p>（2）启动logstash容器<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d --name logstash --net somenetwork -p 5044:5044 -p 9600:9600 --privileged=true -v /usr/local/logstash/pipeline/:/usr/share/logstash/pipeline/ logstash:7.9.0</span><br></pre></td></tr></table></figure></p>
<p>容器内部使用的logstash.conf配置文件output并未指向elasticsearch，需要修改logstash.conf配置，使用挂载的方式使用宿主机的配置文件覆盖logstash.conf，方便修改配置。<br>宿主机/usr/local/logstash/pipeline/目录下放置logstash-me.conf文件，文件配置如下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Beats -&gt; Logstash -&gt; Elasticsearch pipeline.</span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; 5044</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">    codec =&gt; rubydebug</span><br><span class="line">  &#125;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; [&quot;http://elasticsearch:9200&quot;]</span><br><span class="line">    index =&gt; &quot;%&#123;[@metadata][beat]&#125;-%&#123;+YYYY.MM.dd&#125;&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="5-部署filebeat，版本为7-9-0"><a href="#5-部署filebeat，版本为7-9-0" class="headerlink" title="5 部署filebeat，版本为7.9.0"></a>5 部署filebeat，版本为7.9.0</h3><p>本文使用filebeat负责采集日志，需要安装到被采集日志的机器上</p>
]]></content>
      <categories>
        <category>日志收集</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>elk</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 命令</title>
    <url>/2017/07/10/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>使用kubernetes部署redis cluster</title>
    <url>/2017/08/03/kubernetes-deploy-redis-cluster/</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>使用kubernetes部署3主3从的redis cluster，为保证redis 的master和slave实例分布到不同的node上，至少需要2个node节点。</p>
<h3 id="部署方案"><a href="#部署方案" class="headerlink" title="部署方案"></a>部署方案</h3><p>将redis cluster部署到docker中，使用kubernetes管理docker集群，可以依靠kubernetes的一些特性实现redis cluster的node节点选取，宕机恢复等工作。<br>kubernetes：</p>
<ol>
<li>使用kubernetes 的ReplicaSet类型，此类型为ReplicationController的升级版，更好的支持selector，且当redis cluster 扩容缩容时修改RS配置后相应的pod不会重启导致redis实例异常</li>
<li>创建2个pod副本，2个副本分布作为master和slave。使用kubernetes的pod反亲和性将2个副本部署到不同node上。</li>
<li>使用环境变量配置redis实例需要的port、maxmemory、requirepass等信息，并可以写入到docker容器中，使redis.conf生效</li>
<li>kubernetes中限制docker容器的cpu和内存</li>
<li>redis cluster规范中建议使用docker host网络模式，网络损耗小，且易于管理</li>
<li>由于redis可持久化，所以实例的持久化文件需要通过hostPath方式挂载到docker的宿主机上，以便用于恢复</li>
</ol>
<p>docker：</p>
<ol>
<li>docker镜像中打包 redis server</li>
<li>在docker容器中使用<a href="https://github.com/jwilder/dockerize" target="_blank" rel="noopener">dockerize</a>生成redis.conf文件</li>
</ol>
<h3 id="部署流程"><a href="#部署流程" class="headerlink" title="部署流程"></a>部署流程</h3><h4 id="1-部署环境和版本"><a href="#1-部署环境和版本" class="headerlink" title="1. 部署环境和版本"></a>1. 部署环境和版本</h4><table>
<thead>
<tr>
<th style="text-align:center">node ip</th>
<th style="text-align:center">用途</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">10.10.0.1</td>
<td style="text-align:center">kubernetes master</td>
</tr>
<tr>
<td style="text-align:center">10.10.0.2</td>
<td style="text-align:center">kubernetes proxy</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:left">server</th>
<th style="text-align:center">version</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">docker</td>
<td style="text-align:center">1.12.3</td>
</tr>
<tr>
<td style="text-align:left">kubernetes</td>
<td style="text-align:center">1.6.4</td>
</tr>
<tr>
<td style="text-align:left">redis</td>
<td style="text-align:center">3.2.9</td>
</tr>
</tbody>
</table>
<h4 id="2-制作docker镜像"><a href="#2-制作docker镜像" class="headerlink" title="2. 制作docker镜像"></a>2. 制作docker镜像</h4><p>编写dockerfile，其中使用 dockerize插件通过redis.tmpl模板生成redis.conf配置文件<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">FROM</span> <span class="attr">centos:7</span></span><br><span class="line"><span class="string">MAINTAINER</span> <span class="string">The</span> <span class="string">centos</span> <span class="string">project</span> <span class="string">for</span> <span class="string">redis</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">REDIS_VERSION</span> <span class="number">3.2</span><span class="number">.9</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">dockerize</span> <span class="string">/usr/local/bin/</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">redis.tmpl</span> <span class="string">/opt/</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">redis-3.2.9</span> <span class="string">/opt/redis-3.2.9</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">mkdir</span> <span class="bullet">-p</span> <span class="string">/opt/data</span></span><br></pre></td></tr></table></figure></p>
<p>redis.tmpl<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">bind</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="string">protected-mode</span> <span class="literal">no</span></span><br><span class="line"><span class="string">port</span> <span class="string">&#123;&#123;</span> <span class="string">.Env.REDIS_PORT</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">tcp-backlog</span> <span class="number">511</span></span><br><span class="line"><span class="string">timeout</span> <span class="number">0</span></span><br><span class="line"><span class="string">tcp-keepalive</span> <span class="number">300</span></span><br><span class="line"><span class="string">daemonize</span> <span class="literal">no</span></span><br><span class="line"><span class="string">supervised</span> <span class="literal">no</span></span><br><span class="line"><span class="string">pidfile</span> <span class="string">/var/run/redis.pid</span></span><br><span class="line"><span class="string">loglevel</span> <span class="string">notice</span></span><br><span class="line"><span class="string">logfile</span> <span class="string">"/opt/data/logs/<span class="template-variable">&#123;&#123; .Env.REDIS_CLUSTER_ID &#125;&#125;</span>_redis.log"</span></span><br><span class="line"><span class="string">databases</span> <span class="number">16</span></span><br><span class="line"><span class="string">save</span> <span class="number">900</span> <span class="number">1</span></span><br><span class="line"><span class="string">save</span> <span class="number">300</span> <span class="number">10</span></span><br><span class="line"><span class="string">save</span> <span class="number">60</span> <span class="number">10000</span></span><br><span class="line"><span class="string">stop-writes-on-bgsave-error</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">rdbcompression</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">rdbchecksum</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">dbfilename</span> <span class="string">&#123;&#123;</span> <span class="string">.Env.REDIS_CLUSTER_ID</span> <span class="string">&#125;&#125;_dump.rdb</span></span><br><span class="line"><span class="string">dir</span> <span class="string">/opt/data/dump</span></span><br><span class="line"><span class="string">masterauth</span> <span class="string">&#123;&#123;</span> <span class="string">default</span> <span class="string">.Env.REDIS_PASS</span> <span class="string">"sohuRedis"</span><span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">slave-serve-stale-data</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">slave-read-only</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">repl-diskless-sync</span> <span class="literal">no</span></span><br><span class="line"><span class="string">repl-diskless-sync-delay</span> <span class="number">5</span></span><br><span class="line"><span class="string">repl-disable-tcp-nodelay</span> <span class="literal">no</span></span><br><span class="line"><span class="string">slave-priority</span> <span class="number">100</span></span><br><span class="line"><span class="string">requirepass</span> <span class="string">&#123;&#123;</span> <span class="string">default</span> <span class="string">.Env.REDIS_PASS</span> <span class="string">"sohuRedis"</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">appendonly</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">appendfilename</span> <span class="string">"<span class="template-variable">&#123;&#123; .Env.REDIS_CLUSTER_ID &#125;&#125;</span>_appendonly.aof"</span></span><br><span class="line"><span class="string">appendfsync</span> <span class="string">everysec</span></span><br><span class="line"><span class="string">maxmemory</span> <span class="string">&#123;&#123;</span> <span class="string">default</span> <span class="string">.Env.REDIS_MAXMEM</span> <span class="string">"8589934592"</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">maxmemory-policy</span> <span class="string">&#123;&#123;</span> <span class="string">default</span> <span class="string">.Env.REDIS_POLICY</span> <span class="string">"volatile-lru"</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="literal">no</span><span class="bullet">-appendfsync-on-rewrite</span> <span class="literal">no</span></span><br><span class="line"><span class="string">auto-aof-rewrite-percentage</span> <span class="number">100</span></span><br><span class="line"><span class="string">auto-aof-rewrite-min-size</span> <span class="number">64</span><span class="string">mb</span></span><br><span class="line"><span class="string">aof-load-truncated</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">lua-time-limit</span> <span class="number">5000</span></span><br><span class="line"><span class="string">cluster-enabled</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">cluster-config-file</span> <span class="string">/opt/nodes.conf</span></span><br><span class="line"><span class="string">cluster-node-timeout</span> <span class="number">3000</span></span><br><span class="line"><span class="string">cluster-require-full-coverage</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">slowlog-log-slower-than</span> <span class="number">10000</span></span><br><span class="line"><span class="string">slowlog-max-len</span> <span class="number">128</span></span><br><span class="line"><span class="string">latency-monitor-threshold</span> <span class="number">0</span></span><br><span class="line"><span class="string">notify-keyspace-events</span> <span class="string">""</span></span><br><span class="line"><span class="string">hash-max-ziplist-entries</span> <span class="number">512</span></span><br><span class="line"><span class="string">hash-max-ziplist-value</span> <span class="number">64</span></span><br><span class="line"><span class="string">list-max-ziplist-size</span> <span class="bullet">-2</span></span><br><span class="line"><span class="string">list-compress-depth</span> <span class="number">0</span></span><br><span class="line"><span class="string">set-max-intset-entries</span> <span class="number">512</span></span><br><span class="line"><span class="string">zset-max-ziplist-entries</span> <span class="number">128</span></span><br><span class="line"><span class="string">zset-max-ziplist-value</span> <span class="number">64</span></span><br><span class="line"><span class="string">hll-sparse-max-bytes</span> <span class="number">3000</span></span><br><span class="line"><span class="string">activerehashing</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">client-output-buffer-limit</span> <span class="string">normal</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="string">client-output-buffer-limit</span> <span class="string">slave</span> <span class="number">256</span><span class="string">mb</span> <span class="number">64</span><span class="string">mb</span> <span class="number">60</span></span><br><span class="line"><span class="string">client-output-buffer-limit</span> <span class="string">pubsub</span> <span class="number">32</span><span class="string">mb</span> <span class="number">8</span><span class="string">mb</span> <span class="number">60</span></span><br><span class="line"><span class="string">hz</span> <span class="number">10</span></span><br><span class="line"><span class="string">aof-rewrite-incremental-fsync</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure></p>
<p>执行docker命令构建镜像<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build -t centos/redis-cluster .</span><br></pre></td></tr></table></figure></p>
<h4 id="3-创建redis-cluster-pod"><a href="#3-创建redis-cluster-pod" class="headerlink" title="3. 创建redis cluster pod"></a>3. 创建redis cluster pod</h4><p>需要创建3组RS，端口分别为7000,7001,7002<br>创建命令<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kubectl create -f redis-cluster.yaml</span><br></pre></td></tr></table></figure></p>
<p>redis-cluster.yaml文件<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ReplicaSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">redis-7000</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line"><span class="attr">    description:</span> <span class="string">"redis cluster service"</span></span><br><span class="line"><span class="attr">    clusterId:</span> <span class="string">"7000"</span></span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span> </span><br><span class="line"><span class="attr">        app:</span> <span class="string">redis</span></span><br><span class="line"><span class="attr">        name:</span> <span class="string">redis-7000</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      affinity:</span></span><br><span class="line"><span class="attr">        podAntiAffinity:</span></span><br><span class="line"><span class="attr">          requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line"><span class="attr">          - labelSelector:</span></span><br><span class="line"><span class="attr">              matchExpressions:</span></span><br><span class="line"><span class="attr">              - key:</span> <span class="string">name</span></span><br><span class="line"><span class="attr">                operator:</span> <span class="string">In</span></span><br><span class="line"><span class="attr">                values:</span> </span><br><span class="line"><span class="bullet">                -</span> <span class="string">redis-7000</span></span><br><span class="line"><span class="attr">            topologyKey:</span> <span class="string">kubernetes.io/hostname</span></span><br><span class="line"><span class="attr">      hostNetwork:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      containers:</span> </span><br><span class="line"><span class="attr">      - image:</span> <span class="string">centos/redis-cluster:latest</span></span><br><span class="line"><span class="attr">        name:</span> <span class="string">redis-cluster</span></span><br><span class="line"><span class="attr">        imagePullPolicy:</span> <span class="string">Never</span></span><br><span class="line"><span class="attr">        env:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">REDIS_CLUSTER_ID</span></span><br><span class="line"><span class="attr">          value:</span> <span class="string">"7000"</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">REDIS_PORT</span></span><br><span class="line"><span class="attr">          value:</span> <span class="string">"7000"</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">REDIS_MAXMEM</span></span><br><span class="line"><span class="attr">          valueFrom:</span></span><br><span class="line"><span class="attr">            configMapKeyRef:</span></span><br><span class="line"><span class="attr">              name:</span> <span class="string">redis-config</span></span><br><span class="line"><span class="attr">              key:</span> <span class="string">memory</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">REDIS_PASS</span></span><br><span class="line"><span class="attr">          valueFrom:</span></span><br><span class="line"><span class="attr">            configMapKeyRef:</span></span><br><span class="line"><span class="attr">              name:</span> <span class="string">redis-config</span></span><br><span class="line"><span class="attr">              key:</span> <span class="string">password</span></span><br><span class="line"><span class="attr">        command:</span> <span class="string">["/bin/bash",</span> <span class="string">"-c"</span><span class="string">]</span></span><br><span class="line"><span class="attr">        args:</span> <span class="string">["</span> <span class="string">sleep</span> <span class="number">60</span><span class="string">;cd</span> <span class="string">/opt/data/dump/;</span> <span class="string">for</span> <span class="string">i</span> <span class="string">in</span> <span class="string">`ls|grep</span> <span class="bullet">-P</span> <span class="string">'^$(REDIS_CLUSTER_ID)'</span><span class="string">`;do</span> <span class="string">name=`date</span> <span class="string">+%T`;mv</span> <span class="string">$i</span> <span class="string">$name$i;done;</span> <span class="string">cd</span> <span class="string">/opt/data/conf/</span></span><br><span class="line"><span class="string">;</span> <span class="string">for</span> <span class="string">k</span> <span class="string">in</span> <span class="string">`ls|grep</span> <span class="bullet">-P</span> <span class="string">'^$(REDIS_CLUSTER_ID)'</span><span class="string">`;do</span> <span class="string">name=`date</span> <span class="string">+%T`;</span> <span class="string">mv</span> <span class="string">$k</span> <span class="string">$name$k;</span> <span class="string">done;</span> <span class="string">dockerize</span> <span class="bullet">-template</span> <span class="string">/opt/redis.tmpl:/opt/redis-3.2.9/redis-cluster.conf</span> <span class="string">/opt/redis-3.2.9/src/redis-server</span> <span class="string">/opt/redis-3.2.9/redis-cluster.conf"]</span>        <span class="attr">resources:</span></span><br><span class="line"><span class="attr">        requests:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="number">6144</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">        volumeMounts:</span></span><br><span class="line"><span class="attr">        - mountPath:</span> <span class="string">/opt/data</span></span><br><span class="line"><span class="attr">          name:</span> <span class="string">redis-volume</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">redis-volume</span></span><br><span class="line"><span class="attr">        hostPath:</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">/opt/redisData</span></span><br></pre></td></tr></table></figure></p>
<p>redis-configmap.yaml<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">redis-config</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line"><span class="attr">  memory:</span> <span class="string">"33554432"</span></span><br><span class="line"><span class="attr">  password:</span> <span class="string">"redisPassword"</span></span><br></pre></td></tr></table></figure></p>
<ol start="4">
<li>组建redis cluster集群、分槽，并添加slave节点</li>
</ol>
<p>组建redis cluster集群</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/home/redis-3.2.9/src/redis-cli -h 10.10.0.1 -p 7000 -a RedisPass cluster meet 10.10.0.1 7001</span><br><span class="line">/home/redis-3.2.9/src/redis-cli -h 10.10.0.1 -p 7000 -a RedisPass cluster meet 10.10.0.1 7002</span><br><span class="line">/home/redis-3.2.9/src/redis-cli -h 10.10.0.1 -p 7000 -a RedisPass cluster meet 10.10.0.2 7000</span><br><span class="line">/home/redis-3.2.9/src/redis-cli -h 10.10.0.1 -p 7000 -a RedisPass cluster meet 10.10.0.2 7001</span><br><span class="line">/home/redis-3.2.9/src/redis-cli -h 10.10.0.1 -p 7000 -a RedisPass cluster meet 10.10.0.2 7002</span><br></pre></td></tr></table></figure>
<p>分槽脚本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">for i in `seq 0 5461`</span><br><span class="line">do</span><br><span class="line">slot1=$&#123;slot1&#125;" "$&#123;i&#125;</span><br><span class="line">done</span><br><span class="line">echo $&#123;slot1&#125;</span><br><span class="line">/home/redis-3.2.9/src/redis-cli -h 10.10.0.1 -p 7000 -a RedisPass cluster addslots $&#123;slot1&#125;</span><br><span class="line"></span><br><span class="line">for a in `seq 5462 10922`</span><br><span class="line">do</span><br><span class="line">slot2=$&#123;slot2&#125;" "$&#123;a&#125;</span><br><span class="line">done</span><br><span class="line">echo $&#123;slot2&#125;</span><br><span class="line">/home/redis-3.2.9/src/redis-cli -h 10.10.0.1 -p 7001 -a RedisPass CLUSTER ADDSLOTS $&#123;slot2&#125;</span><br><span class="line"></span><br><span class="line">for k in `seq 10923 16383`</span><br><span class="line">do</span><br><span class="line">slot3=$&#123;slot3&#125;" "$&#123;k&#125;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">/home/redis-3.2.9/src/redis-cli -h 10.10.0.1 -p 7002 -a RedisPass CLUSTER ADDSLOTS $&#123;slot3&#125;</span><br></pre></td></tr></table></figure>
<h3 id="部署中的问题"><a href="#部署中的问题" class="headerlink" title="部署中的问题"></a>部署中的问题</h3><ol>
<li>redis cluster master故障后slave节点不能自动提升为master.<br>问题原因：由于部署pod或者pod中容器重启时间很快，导致redis集群未选举出新的master，所以无法自动把slave提升为master。redis集群选举请参考 <a href="https://redis.io/topics/cluster-spec" target="_blank" rel="noopener">redis规范</a><br>临时解决方法：延缓容器中redis服务的启动时间</li>
<li>redis集群缩容时需要更新RS的maxmemory环境变量，更新后若容器故障重启，不会使用更新后的RS配置（delete pod 操作新配置会生效）。<br>解决方法：使用configmap配置环境变量</li>
</ol>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>kubernetes</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>zookeeper集群在线迁移</title>
    <url>/2017/07/19/migrate-zookeeper/</url>
    <content><![CDATA[<h4 id="1-zookeeper介绍"><a href="#1-zookeeper介绍" class="headerlink" title="1 zookeeper介绍"></a>1 zookeeper介绍</h4><p>zookeeper作为一种分布式服务框架，为分布式应用提供一致性服务，它是开源的Hadoop项目中的一个子项目。在部署模式中，zookeeper支持单机模式和集群模式，生产环境中采用集群模式部署。<br>应用系统在使用zookeeper集群时最好采用域名方式，尽量避免直接使用IP地址。</p>
<h4 id="2-集群迁移背景"><a href="#2-集群迁移背景" class="headerlink" title="2 集群迁移背景"></a>2 集群迁移背景</h4><p>目前线上zookeeper集群有3个节点，由于机器下线需要把3个节点迁移到其他机器上，迁移过程zookeeper不能停止服务，并保证数据正常，尽量少的重启应用服务。</p>
<h4 id="3-迁移方案"><a href="#3-迁移方案" class="headerlink" title="3 迁移方案"></a>3 迁移方案</h4><p>迁移方案有如下两种：<br>(1) 搭建新的zookeeper集群，通过脚本将原有zk数据备份，并导入到新的zk集群，然后重启应用服务，使用新集群。这种方案操作简单，但是缺点较多，稳定性差，使用范围小（适用于只读zk的应用场景）。不作详细介<br>(2) 先扩容后缩容<br>zk集群中有半数以上节点存活即可提供服务，使用这个特性可以把3个节点的集群扩容到5个节点的集群，然后在依次缩容，减少的3个节点的集群。通过这个过程达到迁移的目的。具体步骤如下：<br>1.准备集群环境</p>
<table>
<thead>
<tr>
<th style="text-align:center">Index</th>
<th style="text-align:center">IP</th>
<th style="text-align:center">Hostname</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">10.10.0.110</td>
<td style="text-align:center">zk-00</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">10.10.0.111</td>
<td style="text-align:center">zk-01</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">10.10.0.112</td>
<td style="text-align:center">zk-02</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">10.10.0.113</td>
<td style="text-align:center">zk-03</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">10.10.0.114</td>
<td style="text-align:center">zk-04</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">10.10.0.115</td>
<td style="text-align:center">zk-05</td>
</tr>
</tbody>
</table>
<p>2.<strong>扩容</strong>。查看当前3节点集群状态，以及各个节点的角色<br>  可使用zookeeper查看工具<br>3.修改节点4和节点5的配置conf/zoo.conf文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The number of milliseconds of each tick</span></span><br><span class="line"><span class="string">tickTime=2000</span></span><br><span class="line"><span class="comment"># The number of ticks that the initial </span></span><br><span class="line"><span class="comment"># synchronization phase can take</span></span><br><span class="line"><span class="string">initLimit=10</span></span><br><span class="line"><span class="comment"># The number of ticks that can pass between </span></span><br><span class="line"><span class="comment"># sending a request and getting an acknowledgement</span></span><br><span class="line"><span class="string">syncLimit=5</span></span><br><span class="line"><span class="comment"># the directory where the snapshot is stored.</span></span><br><span class="line"><span class="comment"># do not use /tmp for storage, /tmp here is just </span></span><br><span class="line"><span class="comment"># example sakes.</span></span><br><span class="line"><span class="string">dataDir=/opt/zookeeper-3.4.8/data</span></span><br><span class="line"><span class="string">dataLogDir=/opt/zookeeper-3.4.8/logs</span></span><br><span class="line"><span class="comment"># the port at which the clients will connect</span></span><br><span class="line"><span class="string">clientPort=2181</span></span><br><span class="line"><span class="comment"># the maximum number of client connections.</span></span><br><span class="line"><span class="comment"># increase this if you need to handle more clients</span></span><br><span class="line"><span class="comment">#maxClientCnxns=60</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Be sure to read the maintenance section of the </span></span><br><span class="line"><span class="comment"># administrator guide before turning on autopurge.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The number of snapshots to retain in dataDir</span></span><br><span class="line"><span class="comment">#autopurge.snapRetainCount=3</span></span><br><span class="line"><span class="comment"># Purge task interval in hours</span></span><br><span class="line"><span class="comment"># Set to "0" to disable auto purge feature</span></span><br><span class="line"><span class="comment">#autopurge.purgeInterval=1</span></span><br><span class="line"><span class="string">server.1=10.10.0.110:2888:3888</span></span><br><span class="line"><span class="string">server.2=10.10.0.111:2888:3888</span></span><br><span class="line"><span class="string">server.3=10.10.0.112:2888:3888</span></span><br><span class="line"><span class="string">server.4=10.10.0.113:2888:3888</span></span><br><span class="line"><span class="string">server.5=10.10.0.115:2888:3888</span></span><br></pre></td></tr></table></figure>
<p>4.启动节点4和节点5的zk服务，并在leader节点查看数据是否同步<br>5.依次修改配置，并重启节点1、节点2、节点3<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">server.1=10.10.0.110:2888:3888</span></span><br><span class="line"><span class="string">server.2=10.10.0.111:2888:3888</span></span><br><span class="line"><span class="string">server.3=10.10.0.112:2888:3888</span></span><br><span class="line"><span class="string">server.4=10.10.0.113:2888:3888</span></span><br><span class="line"><span class="string">server.5=10.10.0.115:2888:3888</span></span><br></pre></td></tr></table></figure></p>
<p>重启zk服务原则：</p>
<ol>
<li>我们应该保证，集群中最低有3台ZooKeeper是正常启动的。</li>
<li>重启时应保证先重启myid最小的机器，由小向大进行重启。</li>
<li>Leader无论其myid大小，都放到最后重启。ZooKeeper的机制中，myid大的会向小的发起连接，而小的不会向大的发起连接。因此如果最后重启myid最小的机器，则其可能无法加入集群</li>
<li>重启follower节点无影响，当重启leader节点时会触发leader选举，zxid最新的默认优先当选新的leader，当zxid相同，myid最大的优先当选新的leader</li>
</ol>
<p>6.此时zk集群为5节点集群，查看集群状态<br>7.<strong>缩容</strong>，将5节点缩容为3节点<br>8.将节点1和节点2停止zk服务下线，假设这两个节点为follower<br>9.修改节点3,4,5配置，按照重启原则重启这个3个节点的zk服务<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">server.3=10.10.0.112:2888:3888</span></span><br><span class="line"><span class="string">server.4=10.10.0.113:2888:3888</span></span><br><span class="line"><span class="string">server.5=10.10.0.115:2888:3888</span></span><br></pre></td></tr></table></figure></p>
<p>10.另一个节点的迁移按照以上步骤完成</p>
<h4 id="4-注意事项"><a href="#4-注意事项" class="headerlink" title="4 注意事项"></a>4 注意事项</h4><p>迁移过程中扩容到5节点，然后缩容到3节点，这个过程中会有一个原有集群的节点存在，zk集群仍然可以通过服务。<br>(1)如果应用服务中使用IP+port访问zk集群，此时应该修改应用程序中的zk集群IP地址为：<br><code>10.10.0.113:2888 10.10.0.114:2888 10.10.0.115:2888</code>,然后重启应用服务程序。<br>(2)如果应用中使用域名访问zk集群，那么可以将节点1，2使用的域名映射到节点4,5的IP</p>
]]></content>
      <categories>
        <category>云计算</category>
        <category>运维</category>
      </categories>
      <tags>
        <tag>zookeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>zookeeper状态查看工具</title>
    <url>/2017/07/19/zookeeper-status-check/</url>
    <content><![CDATA[<p>本工具用于查看zookeeper集群的运行状态和节点的角色，并选中leader节点，通过 <code>echo mntr|nc ${leaderIP} ${zkPort}</code>  获取集群的信息。<br>脚本运行的机器需要可<strong>免密码登录</strong>到各个zk节点。</p>
<h3 id="1-代码实例"><a href="#1-代码实例" class="headerlink" title="1.代码实例"></a>1.代码实例</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看zk运行状态</span></span><br><span class="line"></span><br><span class="line">nodeips=(10.10.0.102 10.10.0.103 10.10.0.104)</span><br><span class="line">port=2183</span><br><span class="line">zkPath="/opt/zookeeper-3.4.8/bin"</span><br><span class="line">leaderIP=""</span><br><span class="line">for ip in $&#123;nodeips[@]&#125;</span><br><span class="line">do</span><br><span class="line">  echo $ip</span><br><span class="line">  info=`ssh root@$ip &lt;&lt; EOF</span><br><span class="line">    cd $&#123;zkPath&#125;</span><br><span class="line">    sh $&#123;zkPath&#125;/zkServer.sh status</span><br><span class="line">    exit 0</span><br><span class="line">EOF`</span><br><span class="line">  echo $info</span><br><span class="line">  role=`echo $info|awk -F ":" '&#123;print $2&#125;'|sed s/[[:space:]]//g`</span><br><span class="line">  if [ "$role"x == "leader"x ]; then</span><br><span class="line">    leaderIP=$ip</span><br><span class="line">  fi</span><br><span class="line">  echo "-------------------------------------"</span><br><span class="line">done</span><br><span class="line">echo "echo mntr|nc $&#123;leaderIP&#125; $&#123;port&#125;"</span><br><span class="line">ssh root@$&#123;leaderIP&#125; "cd $&#123;zkPath&#125;; echo mntr|nc $&#123;leaderIP&#125; $&#123;port&#125;"</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure>
<h3 id="2-运行结果"><a href="#2-运行结果" class="headerlink" title="2. 运行结果"></a>2. 运行结果</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@security tools]$sh zk-status.sh </span><br><span class="line">10.10.0.102</span><br><span class="line">Pseudo-terminal will not be allocated because stdin is not a terminal.</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /opt/zookeeper-3.4.8/bin/../conf/zoo.cfg</span><br><span class="line">Mode: follower</span><br><span class="line">-------------------------------------</span><br><span class="line">10.10.0.103</span><br><span class="line">Pseudo-terminal will not be allocated because stdin is not a terminal.</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /opt/zookeeper-3.4.8/bin/../conf/zoo.cfg</span><br><span class="line">Mode: leader</span><br><span class="line">-------------------------------------</span><br><span class="line">10.10.0.104</span><br><span class="line">Pseudo-terminal will not be allocated because stdin is not a terminal.</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /opt/zookeeper-3.4.8/bin/../conf/zoo.cfg</span><br><span class="line">Mode: follower</span><br><span class="line">-------------------------------------</span><br><span class="line">echo mntr|nc 10.10.0.103 2183</span><br><span class="line">zk_version	3.4.8--1, built on 02/06/2016 03:18 GMT</span><br><span class="line">zk_avg_latency	0</span><br><span class="line">zk_max_latency	11</span><br><span class="line">zk_min_latency	0</span><br><span class="line">zk_packets_received	237879</span><br><span class="line">zk_packets_sent	237879</span><br><span class="line">zk_num_alive_connections	3</span><br><span class="line">zk_outstanding_requests	0</span><br><span class="line">zk_server_state	leader</span><br><span class="line">zk_znode_count	40</span><br><span class="line">zk_watch_count	2</span><br><span class="line">zk_ephemerals_count	0</span><br><span class="line">zk_approximate_data_size	11090</span><br><span class="line">zk_open_file_descriptor_count	33</span><br><span class="line">zk_max_file_descriptor_count	65535</span><br><span class="line">zk_followers	2</span><br><span class="line">zk_synced_followers	2</span><br><span class="line">zk_pending_syncs	0</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>云计算</category>
        <category>运维</category>
      </categories>
      <tags>
        <tag>zookeeper</tag>
      </tags>
  </entry>
</search>
